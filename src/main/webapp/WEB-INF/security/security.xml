<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:oauth2="http://www.springframework.org/schema/security/oauth2"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd http://www.springframework.org/schema/security/oauth2  http://www.springframework.org/schema/security/spring-security-oauth2.xsd">

   <!-- 调试模式 -->
   <!--   <security:debug/> -->
  
    <!-- oauth2.0 第三方信息查询 --> 
    <!-- oauth client的配置，类似于spring security的用户查询，
               clientDetailsService是一个接口（里面只有一个loadClientByClientId方法获取ClientDetails）
                                  clientDetailsUserDetailsService是实体查询类 -->
    <bean id="clientDetailsService" class="cn.hist.security.service.imp.MyClientDetailsService" />
   
	<bean id="clientDetailsUserDetailsService" class="org.springframework.security.oauth2.provider.client.ClientDetailsUserDetailsService">
		<constructor-arg ref="clientDetailsService" />
	</bean>
	
    <security:authentication-manager id="clientAuthenticationManager">
		<security:authentication-provider user-service-ref="clientDetailsUserDetailsService" />
	</security:authentication-manager>

	<!--************************************* end end end ******************************************** -->
	

	
	<!-- oauth的核心配置，包括clent端信息查询配置，token的相关查询，用户授权处理，授权码的获取 -->
	
	<bean id="tokenStore" class="org.springframework.security.oauth2.provider.token.store.InMemoryTokenStore" />
	<bean id="tokenServices" class="org.springframework.security.oauth2.provider.token.DefaultTokenServices">
		<property name="tokenStore" ref="tokenStore" />
		<property name="supportRefreshToken" value="true" />
		<property name="clientDetailsService" ref="clientDetailsService"/> 
	</bean>
	
	<!-- <beans:bean id="authorizationCodeServices" class="org.springframework.security.oauth2.provider.code.JdbcAuthorizationCodeServices">
       <beans:constructor-arg index="0" ref="platform_dataSource"/>
    </beans:bean> -->
	
	
	<bean id="userApprovalHandler" class="org.springframework.security.oauth2.provider.approval.DefaultUserApprovalHandler" />
	 <oauth2:authorization-server
		client-details-service-ref="clientDetailsService" token-services-ref="tokenServices"
		user-approval-handler-ref="userApprovalHandler">
	    <oauth2:authorization-code /> 
	    <oauth2:implicit />
		<oauth2:refresh-token />
		<oauth2:client-credentials /> 
		<oauth2:password /> 
		
	</oauth2:authorization-server> 
	<!-- ***********************************************end end end******************************************************************* -->
	
	
	
	
	<!-- oauth获取token的端点保护-->
	<bean id="clientCredentialsTokenEndpointFilter" class="org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter">
		<property name="authenticationManager" ref="clientAuthenticationManager" />
	</bean>
	<bean id="clinetAuthenticationEntryPoint" class="org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint" />
	<bean id="accessDeniedHandler" class="org.springframework.security.oauth2.provider.error.OAuth2AccessDeniedHandler" />
	<security:http pattern="/oauth/token" create-session="stateless"
		authentication-manager-ref="clientAuthenticationManager">
		<security:anonymous enabled="false" />
		<security:http-basic entry-point-ref="clinetAuthenticationEntryPoint" />
		<security:custom-filter ref="clientCredentialsTokenEndpointFilter" before="BASIC_AUTH_FILTER" />
		<security:access-denied-handler ref="accessDeniedHandler" />
	</security:http>
	<!-- ************************************  end   end   end         ************************************************************* -->
	
	
	
	<!--spring security 权限管理 ，userService为此权限提供用户查询功能-->
	<bean id="userService" class="cn.hist.security.service.imp.MyUserDetailService" />
	<security:authentication-manager alias="authenticationManager">
		<security:authentication-provider
			user-service-ref="userService">
			<!--<security:password-encoder hash="md5"/> -->
		</security:authentication-provider>
	</security:authentication-manager>
	<!--*******************************************************end end  end ******************************************************** -->


       <!-- 资源服务器配置 -->
	<oauth2:resource-server id="mobileResourceServer"
		resource-id="mobile-resource" token-services-ref="tokenServices" />
		
		
		<!-- scope校验相关的voter  -->
	<bean id="accessDecisionManager" class="org.springframework.security.access.vote.UnanimousBased">
		<constructor-arg>
			<list>
				<bean class="org.springframework.security.oauth2.provider.vote.ScopeVoter" />
				<bean class="org.springframework.security.access.vote.RoleVoter" />
				<bean class="org.springframework.security.access.vote.AuthenticatedVoter" />
			</list> 
		</constructor-arg>
	</bean>
	
	
	<!-- 保护资源 -->
	<security:http pattern="/abcs/**" create-session="never"
		entry-point-ref="clinetAuthenticationEntryPoint"
		access-decision-manager-ref="accessDecisionManager">
		<security:anonymous enabled="false" />
		<security:intercept-url pattern="/abcs/**"
			access="ROLE_ABCS" />
		<security:custom-filter ref="mobileResourceServer"
			before="PRE_AUTH_FILTER" />
		<security:access-denied-handler ref="accessDeniedHandler" />
	</security:http>
	
	
	
 	 <security:http disable-url-rewriting="true" use-expressions="false"
          authentication-manager-ref="authenticationManager">
        <security:intercept-url pattern="/oauth/**" access="ROLE_ABCS,ROLE_UNITY,ROLE_MOBILE"/>
        <security:intercept-url pattern="/**" access="IS_AUTHENTICATED_ANONYMOUSLY"/>

        <security:form-login authentication-failure-url="/login.jsp?authentication_error=1"
                    login-page="/login.jsp" login-processing-url="/login.do"/>
        <security:logout logout-success-url="/index.jsp" logout-url="/logout.do"/>
        <security:access-denied-handler error-page="/login.jsp?authorization_error=2"/>
        <security:anonymous/>
       
    </security:http>  

</beans>